{"ast":null,"code":"var _jsxFileName = \"/home/jl/skript/gosh/roommanager/front-end/src/components/roomtemplate.jsx\";\nimport React, { Component } from \"react\";\nimport Picupload from \"./picupload\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Image, Tabs, Tab, Button, Carousel, Row, Container, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass room extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Room: null,\n      message: \"loading\",\n      authstufe: {},\n      editing: false,\n      tab: \"pics\",\n      changepics: [],\n      chageprops: {},\n      chagetodos: {},\n      key: \"\",\n      value: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.props.match.params.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), !this.state.Room ? /*#__PURE__*/_jsxDEV(\"b\", {\n        children: this.state.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Tabs, {\n          defaultActiveKey: \"pics\",\n          id: \"uncontrolled-tab-example\",\n          onSelect: selectedkey => {\n            this.setState({\n              tab: selectedkey,\n              editing: false,\n              key: \"\",\n              value: \"\"\n            });\n          },\n          children: [!(this.state.authstufe.admin || this.state.authstufe.see_pics) ? null : /*#__PURE__*/_jsxDEV(Tab, {\n            eventKey: \"pics\",\n            title: \"Bilder\",\n            children: this.renderpics()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), !(this.state.authstufe.see_props || this.state.authstufe.admin) ? undefined : /*#__PURE__*/_jsxDEV(Tab, {\n            eventKey: \"props\",\n            title: \"Eigenschaften\",\n            children: this.rendertabg()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), !(this.state.authstufe.see_todo || this.state.authstufe.admin) ? undefined : /*#__PURE__*/_jsxDEV(Tab, {\n            eventKey: \"todos\",\n            title: \"Todo\",\n            children: this.rendertabg()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), this.renderButton()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n  async componentDidMount() {\n    var requestOptions = {\n      method: \"GET\",\n      redirect: \"follow\"\n    };\n    const room = await fetch(\"/api/rooms/\" + this.props.match.params.name, requestOptions);\n    const fine = await room.json(); //get user athentication status\n\n    if (!document.cookie.includes(\"auth_token\")) return;\n    var perm = await fetch(\"/api/users/me/auth\", requestOptions);\n    const fine2 = await perm.json();\n    this.setState({\n      Room: fine,\n      authstufe: fine2,\n      chageprops: { ...fine.props\n      },\n      chagetodos: { ...fine.todos\n      }\n    });\n  }\n\n  renderpics() {\n    if (!this.state.Room.pics) return /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"Es sind keine Bilder f\\xFCr diesen Raum vorhanden\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 14\n    }, this);\n    if (this.state.Room.pics.length === 0) return /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"Es sind keine Bilder f\\xFCr diesen Raum vorhanden\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 14\n    }, this);\n    return !this.state.editing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RoomPicBox\",\n      children: /*#__PURE__*/_jsxDEV(Carousel, {\n        children: this.state.Room.pics.map((p, i) => {\n          const base64string = String(\"data:image/png;base64,\" + Buffer.from(p.pic.data).toString(\"base64\"));\n          return /*#__PURE__*/_jsxDEV(Carousel.Item, {\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              fluid: true,\n              src: base64string,\n              alt: \"First slide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RoomPicBox\",\n      children: this.state.Room.pics.map((p, i) => {\n        const base64string = String(\"data:image/png;base64,\" + Buffer.from(p.pic.data).toString(\"base64\"));\n        return /*#__PURE__*/_jsxDEV(Row, {\n          md: \"2\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(Image, {\n            src: base64string,\n            className: \"autobilder\",\n            fluid: true\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: p._id,\n            onClick: e => {\n              this.state.changepics.push(e.target.id);\n            },\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)]\n        }, p._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this);\n  }\n\n  rendertabg() {\n    if (!this.state.Room.props) return;\n    if (this.state.tab === \"pics\") return;\n    return !this.state.editing ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PropsList\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: \"md\",\n          children: Object.keys(this.state.Room[this.state.tab]).map((prop, i) => {\n            return /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: \"auto\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: prop\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: \"auto\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: this.state.Room[this.state.tab][prop]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PropsList\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: \"md\",\n          children: [Object.keys(this.state.Room[this.state.tab]).map((prop, i) => {\n            return /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: \"auto\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  value: prop,\n                  readOnly: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: \"auto\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: prop,\n                  value: this.state[\"chage\" + this.state.tab][prop],\n                  onChange: e => this.setState(prevState => {\n                    prevState[\"chage\" + this.state.tab][prop] = e.target.value;\n                    return prevState;\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"danger\",\n                  id: prop._id,\n                  onClick: e => {\n                    this.setState(prevState => {\n                      prevState[\"chage\" + this.state.tab][prop] = undefined;\n                      return prevState;\n                    });\n                  },\n                  children: \"del\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 19\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: \"auto\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => this.setState({\n                  key: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"auto\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => this.setState({\n                  value: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this);\n  }\n\n  renderButton() {\n    if (this.state.tab === \"pics\" && (this.state.authstufe.edit_pics || this.state.authstufe.admin)) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: !this.state.editing ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => this.setState({\n            editing: true\n          }),\n          children: \"edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(Picupload, {\n            name: this.props.match.params.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => this.setState({\n                editing: false\n              }),\n              children: \"cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              onClick: async e => {\n                const delbil = this.state.changepics;\n                var myHeaders = new Headers();\n                myHeaders.append(\"Content-Type\", \"application/json\");\n                var raw = JSON.stringify(delbil);\n                var requestOptions = {\n                  method: \"DELETE\",\n                  headers: myHeaders,\n                  body: raw,\n                  redirect: \"follow\"\n                };\n                fetch(\"/api/rooms/\" + this.props.match.params.name + \"/pic/admin\", requestOptions);\n                this.setState({\n                  editing: false\n                });\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this);\n    }\n\n    if ((this.state.tab === \"todos\" || this.state.tab === \"props\") && (this.state.authstufe[this.state.tab === \"props\" ? \"edit_props\" : \"edit_todo\"] || this.state.authstufe.admin)) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !this.state.editing ? /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => this.setState({\n          editing: true\n        }),\n        children: \"edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.setState(prevState => {\n              prevState.editing = false;\n              prevState.key = \"\";\n              prevState.value = \"\";\n              prevState[\"chage\" + this.state.tab] = { ...this.state.Room[this.state.tab]\n              };\n              return prevState;\n            }),\n            children: \"cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: async e => {\n              var myHeaders = new Headers();\n              myHeaders.append(\"Content-Type\", \"application/json\");\n              if (!(this.state.key === \"\" || this.state.value === \"\")) this.state[\"chage\" + this.state.tab][this.state.key] = this.state.value;\n              var send = {};\n\n              if (this.state.tab === \"todos\") {\n                send = {\n                  buckedlist: this.state.chagetodos\n                };\n              } else {\n                send = {\n                  props: this.state.chageprops\n                };\n              }\n\n              var raw = JSON.stringify(send);\n              var requestOptions = {\n                method: \"PATCH\",\n                headers: myHeaders,\n                body: raw,\n                redirect: \"follow\"\n              };\n              fetch(\"/api/rooms/\" + this.props.match.params.name + \"/admin\", requestOptions);\n              this.setState(prevState => {\n                prevState.editing = false;\n                prevState.Room[this.state.tab] = { ...this.state[\"chage\" + this.state.tab]\n                };\n                return prevState;\n              });\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default room;","map":{"version":3,"sources":["/home/jl/skript/gosh/roommanager/front-end/src/components/roomtemplate.jsx"],"names":["React","Component","Picupload","Image","Tabs","Tab","Button","Carousel","Row","Container","Col","room","state","Room","message","authstufe","editing","tab","changepics","chageprops","chagetodos","key","value","render","props","match","params","name","selectedkey","setState","admin","see_pics","renderpics","see_props","undefined","rendertabg","see_todo","renderButton","componentDidMount","requestOptions","method","redirect","fetch","fine","json","document","cookie","includes","perm","fine2","todos","pics","length","map","p","i","base64string","String","Buffer","from","pic","data","toString","_id","e","push","target","id","Object","keys","prop","prevState","edit_pics","delbil","myHeaders","Headers","append","raw","JSON","stringify","headers","body","send","buckedlist"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Picupload from \"./picupload\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  Image,\n  Tabs,\n  Tab,\n  Button,\n  Carousel,\n  Row,\n  Container,\n  Col,\n} from \"react-bootstrap\";\n\nclass room extends Component {\n  state = {\n    Room: null,\n    message: \"loading\",\n    authstufe: {},\n    editing: false,\n    tab: \"pics\",\n    changepics: [],\n    chageprops: {},\n    chagetodos: {},\n    key: \"\",\n    value: \"\",\n  };\n  render() {\n    return (\n      <div>\n        <p>{this.props.match.params.name}</p>\n\n        {!this.state.Room ? (\n          <b>{this.state.message}</b>\n        ) : (\n          <React.Fragment>\n            <Tabs\n              defaultActiveKey=\"pics\"\n              id=\"uncontrolled-tab-example\"\n              onSelect={(selectedkey) => {\n                this.setState({\n                  tab: selectedkey,\n                  editing: false,\n                  key: \"\",\n                  value: \"\",\n                });\n              }}\n            >\n              {!(\n                this.state.authstufe.admin || this.state.authstufe.see_pics\n              ) ? null : (\n                <Tab eventKey=\"pics\" title=\"Bilder\">\n                  {this.renderpics()}\n                </Tab>\n              )}\n              {!(\n                this.state.authstufe.see_props || this.state.authstufe.admin\n              ) ? undefined : (\n                <Tab eventKey=\"props\" title=\"Eigenschaften\">\n                  {this.rendertabg()}\n                </Tab>\n              )}\n              {!(\n                this.state.authstufe.see_todo || this.state.authstufe.admin\n              ) ? undefined : (\n                <Tab eventKey=\"todos\" title=\"Todo\">\n                  {this.rendertabg()}\n                </Tab>\n              )}\n            </Tabs>\n            {this.renderButton()}\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n\n  async componentDidMount() {\n    var requestOptions = {\n      method: \"GET\",\n      redirect: \"follow\",\n    };\n\n    const room = await fetch(\n      \"/api/rooms/\" + this.props.match.params.name,\n      requestOptions\n    );\n\n    const fine = await room.json();\n\n    //get user athentication status\n\n    if (!document.cookie.includes(\"auth_token\")) return;\n\n    var perm = await fetch(\"/api/users/me/auth\", requestOptions);\n    const fine2 = await perm.json();\n    this.setState({\n      Room: fine,\n      authstufe: fine2,\n      chageprops: { ...fine.props },\n      chagetodos: { ...fine.todos },\n    });\n  }\n\n  renderpics() {\n    if (!this.state.Room.pics)\n      return <b>Es sind keine Bilder für diesen Raum vorhanden</b>;\n    if (this.state.Room.pics.length === 0)\n      return <b>Es sind keine Bilder für diesen Raum vorhanden</b>;\n\n    return !this.state.editing ? (\n      <div className=\"RoomPicBox\">\n        <Carousel>\n          {this.state.Room.pics.map((p, i) => {\n            const base64string = String(\n              \"data:image/png;base64,\" +\n                Buffer.from(p.pic.data).toString(\"base64\")\n            );\n            return (\n              <Carousel.Item key={i}>\n                <Image fluid={true} src={base64string} alt=\"First slide\" />\n              </Carousel.Item>\n            );\n          })}\n        </Carousel>\n      </div>\n    ) : (\n      <div className=\"RoomPicBox\">\n        {this.state.Room.pics.map((p, i) => {\n          const base64string = String(\n            \"data:image/png;base64,\" +\n              Buffer.from(p.pic.data).toString(\"base64\")\n          );\n\n          return (\n            <Row md=\"2\" key={p._id}>\n              {\" \"}\n              <Image\n                src={base64string}\n                key={i}\n                className=\"autobilder\"\n                fluid={true}\n              />\n              <Button\n                id={p._id}\n                onClick={(e) => {\n                  this.state.changepics.push(e.target.id);\n                }}\n              >\n                delete\n              </Button>\n            </Row>\n          );\n        })}\n      </div>\n    );\n  }\n\n  rendertabg() {\n    if (!this.state.Room.props) return;\n    if (this.state.tab === \"pics\") return;\n    return !this.state.editing ? (\n      <React.Fragment>\n        <div className=\"PropsList\">\n          <Container fluid=\"md\">\n            {Object.keys(this.state.Room[this.state.tab]).map((prop, i) => {\n              return (\n                <Row>\n                  <Col md=\"auto\">\n                    <p>{prop}</p>\n                  </Col>\n                  <Col md=\"auto\">\n                    <p>{this.state.Room[this.state.tab][prop]}</p>\n                  </Col>\n                </Row>\n              );\n            })}\n          </Container>\n        </div>\n      </React.Fragment>\n    ) : (\n      <React.Fragment>\n        <div className=\"PropsList\">\n          <Container fluid=\"md\">\n            {Object.keys(this.state.Room[this.state.tab]).map((prop, i) => {\n              return (\n                <Row key={i}>\n                  <Col md=\"auto\">\n                    <input value={prop} readOnly={true}></input>\n                  </Col>\n                  <Col md=\"auto\">\n                    <input\n                      id={prop}\n                      value={this.state[\"chage\" + this.state.tab][prop]}\n                      onChange={(e) =>\n                        this.setState((prevState) => {\n                          prevState[\"chage\" + this.state.tab][prop] =\n                            e.target.value;\n\n                          return prevState;\n                        })\n                      }\n                    ></input>\n                  </Col>\n                  <Col>\n                    <Button\n                      variant=\"danger\"\n                      id={prop._id}\n                      onClick={(e) => {\n                        this.setState((prevState) => {\n                          prevState[\"chage\" + this.state.tab][prop] = undefined;\n                          return prevState;\n                        });\n                      }}\n                    >\n                      del\n                    </Button>\n                  </Col>\n                </Row>\n              );\n            })}\n\n            <Row>\n              <Col md=\"auto\">\n                <input\n                  onChange={(e) => this.setState({ key: e.target.value })}\n                ></input>\n              </Col>\n              <Col md=\"auto\">\n                <input\n                  onChange={(e) => this.setState({ value: e.target.value })}\n                ></input>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  renderButton() {\n    if (\n      this.state.tab === \"pics\" &&\n      (this.state.authstufe.edit_pics || this.state.authstufe.admin)\n    ) {\n      return (\n        <div>\n          {!this.state.editing ? (\n            <Button onClick={() => this.setState({ editing: true })}>\n              edit\n            </Button>\n          ) : (\n            <React.Fragment>\n              {\" \"}\n              <Picupload name={this.props.match.params.name} />\n              <Row>\n                <Button onClick={() => this.setState({ editing: false })}>\n                  cancel\n                </Button>\n                <Button\n                  variant=\"danger\"\n                  onClick={async (e) => {\n                    const delbil = this.state.changepics;\n\n                    var myHeaders = new Headers();\n                    myHeaders.append(\"Content-Type\", \"application/json\");\n\n                    var raw = JSON.stringify(delbil);\n\n                    var requestOptions = {\n                      method: \"DELETE\",\n                      headers: myHeaders,\n                      body: raw,\n                      redirect: \"follow\",\n                    };\n\n                    fetch(\n                      \"/api/rooms/\" +\n                        this.props.match.params.name +\n                        \"/pic/admin\",\n                      requestOptions\n                    );\n\n                    this.setState({ editing: false });\n                  }}\n                >\n                  Save\n                </Button>\n              </Row>\n            </React.Fragment>\n          )}\n        </div>\n      );\n    }\n\n    if (\n      (this.state.tab === \"todos\" || this.state.tab === \"props\") &&\n      (this.state.authstufe[\n        this.state.tab === \"props\" ? \"edit_props\" : \"edit_todo\"\n      ] ||\n        this.state.authstufe.admin)\n    )\n      return (\n        <div>\n          {!this.state.editing ? (\n            <Button onClick={() => this.setState({ editing: true })}>\n              edit\n            </Button>\n          ) : (\n            <React.Fragment>\n              <Row>\n                <Button\n                  onClick={() =>\n                    this.setState((prevState) => {\n                      prevState.editing = false;\n                      prevState.key = \"\";\n                      prevState.value = \"\";\n                      prevState[\"chage\" + this.state.tab] = {\n                        ...this.state.Room[this.state.tab],\n                      };\n\n                      return prevState;\n                    })\n                  }\n                >\n                  cancel\n                </Button>\n                <Button\n                  variant=\"danger\"\n                  onClick={async (e) => {\n                    var myHeaders = new Headers();\n                    myHeaders.append(\"Content-Type\", \"application/json\");\n                    if (!(this.state.key === \"\" || this.state.value === \"\"))\n                      this.state[\"chage\" + this.state.tab][this.state.key] =\n                        this.state.value;\n\n                    var send = {};\n\n                    if (this.state.tab === \"todos\") {\n                      send = { buckedlist: this.state.chagetodos };\n                    } else {\n                      send = { props: this.state.chageprops };\n                    }\n\n                    var raw = JSON.stringify(send);\n\n                    var requestOptions = {\n                      method: \"PATCH\",\n                      headers: myHeaders,\n                      body: raw,\n                      redirect: \"follow\",\n                    };\n\n                    fetch(\n                      \"/api/rooms/\" + this.props.match.params.name + \"/admin\",\n                      requestOptions\n                    );\n\n                    this.setState((prevState) => {\n                      prevState.editing = false;\n                      prevState.Room[this.state.tab] = {\n                        ...this.state[\"chage\" + this.state.tab],\n                      };\n\n                      return prevState;\n                    });\n                  }}\n                >\n                  Save\n                </Button>\n              </Row>\n            </React.Fragment>\n          )}\n        </div>\n      );\n  }\n}\n\nexport default room;\n"]},"metadata":{},"sourceType":"module"}