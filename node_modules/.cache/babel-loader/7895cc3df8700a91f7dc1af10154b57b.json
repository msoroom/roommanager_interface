{"ast":null,"code":"var _jsxFileName = \"/home/jl/skript/gosh/roommanager/front-end/src/components/createroome.jsx\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass createroome extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      room: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => this.setState({\n          room: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var raw = JSON.stringify({\n      name: this.state.room\n    });\n    var requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: raw,\n      redirect: \"follow\"\n    };\n    fetch(\"/api/rooms\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log(\"error\", error));\n  }\n\n}\n\nexport default createroome;","map":{"version":3,"sources":["/home/jl/skript/gosh/roommanager/front-end/src/components/createroome.jsx"],"names":["React","Component","createroome","constructor","props","state","room","handleSubmit","bind","render","e","setState","target","value","event","preventDefault","myHeaders","Headers","append","raw","JSON","stringify","name","requestOptions","method","headers","body","redirect","fetch","then","response","text","result","console","log","catch","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAClCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAKnBC,KALmB,GAKX;AAAEC,MAAAA,IAAI,EAAE;AAAR,KALW;AAEjB,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAGDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKF,YAArB;AAAA,6BACE;AACE,QAAA,QAAQ,EAAGG,CAAD,IAAO,KAAKC,QAAL,CAAc;AAAEL,UAAAA,IAAI,EAAEI,CAAC,CAACE,MAAF,CAASC;AAAjB,SAAd;AADnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAEDN,EAAAA,YAAY,CAACO,KAAD,EAAQ;AAClBA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,IAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AAEA,QAAIC,GAAG,GAAGC,IAAI,CAACC,SAAL,CAAe;AACvBC,MAAAA,IAAI,EAAE,KAAKjB,KAAL,CAAWC;AADM,KAAf,CAAV;AAIA,QAAIiB,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAET,SAFU;AAGnBU,MAAAA,IAAI,EAAEP,GAHa;AAInBQ,MAAAA,QAAQ,EAAE;AAJS,KAArB;AAOAC,IAAAA,KAAK,CAAC,YAAD,EAAeL,cAAf,CAAL,CACGM,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,MAAD,IAAYC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAFpB,EAGGG,KAHH,CAGUC,KAAD,IAAWH,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,KAArB,CAHpB;AAID;;AArCiC;;AAwCpC,eAAelC,WAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass createroome extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  state = { room: \"\" };\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          onChange={(e) => this.setState({ room: e.target.value })}\n        ></input>\n      </form>\n    );\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    var raw = JSON.stringify({\n      name: this.state.room,\n    });\n\n    var requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: raw,\n      redirect: \"follow\",\n    };\n\n    fetch(\"/api/rooms\", requestOptions)\n      .then((response) => response.text())\n      .then((result) => console.log(result))\n      .catch((error) => console.log(\"error\", error));\n  }\n}\n\nexport default createroome;\n"]},"metadata":{},"sourceType":"module"}